/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface ContactHistory {
  change_type: string;
  changed_at: Generated<Timestamp | null>;
  contact_id: number;
  field_name: string | null;
  id: Generated<number>;
  new_value: string | null;
  old_value: string | null;
}

export interface Contacts {
  created_at: Generated<Timestamp | null>;
  email: string;
  first_name: string;
  id: Generated<number>;
  last_name: string;
  phone_number: string;
  updated_at: Generated<Timestamp | null>;
}

export interface FlywaySchemaHistory {
  checksum: number | null;
  description: string;
  execution_time: number;
  installed_by: string;
  installed_on: Generated<Timestamp>;
  installed_rank: number;
  script: string;
  success: boolean;
  type: string;
  version: string | null;
}

export interface DB {
  contact_history: ContactHistory;
  contacts: Contacts;
  flyway_schema_history: FlywaySchemaHistory;
}
